//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WepAPi.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class IRagazziEntities : DbContext
    {
        public IRagazziEntities()
            : base("name=IRagazziEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<TodasCategorias_Result> TodasCategorias()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TodasCategorias_Result>("TodasCategorias");
        }
    
        public virtual int InsertCategoria(string nombre, Nullable<int> activo)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("activo", activo) :
                new ObjectParameter("activo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCategoria", nombreParameter, activoParameter);
        }
    
        public virtual int UpdateCategoria(Nullable<int> id, Nullable<int> activo)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("activo", activo) :
                new ObjectParameter("activo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCategoria", idParameter, activoParameter);
        }
    
        public virtual ObjectResult<GetCategoriasId_Result> GetCategoriasId(Nullable<int> ids)
        {
            var idsParameter = ids.HasValue ?
                new ObjectParameter("Ids", ids) :
                new ObjectParameter("Ids", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCategoriasId_Result>("GetCategoriasId", idsParameter);
        }
    
        public virtual ObjectResult<GetCotegorias_Result> GetCotegorias()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCotegorias_Result>("GetCotegorias");
        }
    
        public virtual ObjectResult<GetFormaDePago_Result> GetFormaDePago()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFormaDePago_Result>("GetFormaDePago");
        }
    
        public virtual ObjectResult<GetFormaDePagoId_Result> GetFormaDePagoId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFormaDePagoId_Result>("GetFormaDePagoId", idParameter);
        }
    
        public virtual int InsertFormaDepago(string forma, Nullable<int> activo)
        {
            var formaParameter = forma != null ?
                new ObjectParameter("Forma", forma) :
                new ObjectParameter("Forma", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertFormaDepago", formaParameter, activoParameter);
        }
    
        public virtual int UpdateFormaDePago(Nullable<int> id, Nullable<int> activo)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateFormaDePago", idParameter, activoParameter);
        }
    
        public virtual int InsertProducto(string nombre, Nullable<int> idCategoria, Nullable<int> activo, byte[] foto)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("idCategoria", idCategoria) :
                new ObjectParameter("idCategoria", typeof(int));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("activo", activo) :
                new ObjectParameter("activo", typeof(int));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("foto", foto) :
                new ObjectParameter("foto", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertProducto", nombreParameter, idCategoriaParameter, activoParameter, fotoParameter);
        }
    
        public virtual ObjectResult<GetProducto_Result> GetProducto()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProducto_Result>("GetProducto");
        }
    
        public virtual ObjectResult<GetProductoID_Result> GetProductoID(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductoID_Result>("GetProductoID", idParameter);
        }
    
        public virtual int UpdateProductos(string nombre, byte[] foto, Nullable<int> idCategoria, Nullable<int> activo, Nullable<int> id)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("foto", foto) :
                new ObjectParameter("foto", typeof(byte[]));
    
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("idCategoria", idCategoria) :
                new ObjectParameter("idCategoria", typeof(int));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("activo", activo) :
                new ObjectParameter("activo", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProductos", nombreParameter, fotoParameter, idCategoriaParameter, activoParameter, idParameter);
        }
    
        public virtual ObjectResult<GetCliente_Result> GetCliente()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCliente_Result>("GetCliente");
        }
    
        public virtual ObjectResult<GetClienteLogin_Result> GetClienteLogin(string email, string contra)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var contraParameter = contra != null ?
                new ObjectParameter("contra", contra) :
                new ObjectParameter("contra", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClienteLogin_Result>("GetClienteLogin", emailParameter, contraParameter);
        }
    
        public virtual int InsertCliente(string nombre, string contra, string email, string telefono, string longitud, string latitud)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var contraParameter = contra != null ?
                new ObjectParameter("contra", contra) :
                new ObjectParameter("contra", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var longitudParameter = longitud != null ?
                new ObjectParameter("longitud", longitud) :
                new ObjectParameter("longitud", typeof(string));
    
            var latitudParameter = latitud != null ?
                new ObjectParameter("latitud", latitud) :
                new ObjectParameter("latitud", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCliente", nombreParameter, contraParameter, emailParameter, telefonoParameter, longitudParameter, latitudParameter);
        }
    
        public virtual int UpdateCliente(string nombre, string contra, string email, string telefono, string longitud, string latitud, Nullable<int> id)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var contraParameter = contra != null ?
                new ObjectParameter("contra", contra) :
                new ObjectParameter("contra", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var longitudParameter = longitud != null ?
                new ObjectParameter("longitud", longitud) :
                new ObjectParameter("longitud", typeof(string));
    
            var latitudParameter = latitud != null ?
                new ObjectParameter("latitud", latitud) :
                new ObjectParameter("latitud", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCliente", nombreParameter, contraParameter, emailParameter, telefonoParameter, longitudParameter, latitudParameter, idParameter);
        }
    
        public virtual int UpdateUbicaion(string longitud, string latitud, Nullable<int> id)
        {
            var longitudParameter = longitud != null ?
                new ObjectParameter("longitud", longitud) :
                new ObjectParameter("longitud", typeof(string));
    
            var latitudParameter = latitud != null ?
                new ObjectParameter("latitud", latitud) :
                new ObjectParameter("latitud", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUbicaion", longitudParameter, latitudParameter, idParameter);
        }
    
        public virtual ObjectResult<GetEmpresaLogin_Result> GetEmpresaLogin(string email, string contra)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var contraParameter = contra != null ?
                new ObjectParameter("contra", contra) :
                new ObjectParameter("contra", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmpresaLogin_Result>("GetEmpresaLogin", emailParameter, contraParameter);
        }
    
        public virtual ObjectResult<GetEmpresas_Result> GetEmpresas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmpresas_Result>("GetEmpresas");
        }
    
        public virtual int InsertEmpresa(string nombre, string logo, string rugro, string longitud, string latitud, string contrasenia, Nullable<int> activo, string email)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var logoParameter = logo != null ?
                new ObjectParameter("logo", logo) :
                new ObjectParameter("logo", typeof(string));
    
            var rugroParameter = rugro != null ?
                new ObjectParameter("rugro", rugro) :
                new ObjectParameter("rugro", typeof(string));
    
            var longitudParameter = longitud != null ?
                new ObjectParameter("longitud", longitud) :
                new ObjectParameter("longitud", typeof(string));
    
            var latitudParameter = latitud != null ?
                new ObjectParameter("latitud", latitud) :
                new ObjectParameter("latitud", typeof(string));
    
            var contraseniaParameter = contrasenia != null ?
                new ObjectParameter("contrasenia", contrasenia) :
                new ObjectParameter("contrasenia", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("activo", activo) :
                new ObjectParameter("activo", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertEmpresa", nombreParameter, logoParameter, rugroParameter, longitudParameter, latitudParameter, contraseniaParameter, activoParameter, emailParameter);
        }
    
        public virtual int UpdateEmpresa(string nombre, string logo, string rugro, string longitud, string latitud, string contra, Nullable<int> activo, string email, Nullable<int> id)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var logoParameter = logo != null ?
                new ObjectParameter("logo", logo) :
                new ObjectParameter("logo", typeof(string));
    
            var rugroParameter = rugro != null ?
                new ObjectParameter("rugro", rugro) :
                new ObjectParameter("rugro", typeof(string));
    
            var longitudParameter = longitud != null ?
                new ObjectParameter("longitud", longitud) :
                new ObjectParameter("longitud", typeof(string));
    
            var latitudParameter = latitud != null ?
                new ObjectParameter("latitud", latitud) :
                new ObjectParameter("latitud", typeof(string));
    
            var contraParameter = contra != null ?
                new ObjectParameter("contra", contra) :
                new ObjectParameter("contra", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("activo", activo) :
                new ObjectParameter("activo", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEmpresa", nombreParameter, logoParameter, rugroParameter, longitudParameter, latitudParameter, contraParameter, activoParameter, emailParameter, idParameter);
        }
    
        public virtual int InsertCompras(Nullable<int> idEmpresa, Nullable<int> idCliente, Nullable<int> idFormaPago, string total, Nullable<System.DateTime> fecha, Nullable<int> rechazo, Nullable<int> activo)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var idFormaPagoParameter = idFormaPago.HasValue ?
                new ObjectParameter("idFormaPago", idFormaPago) :
                new ObjectParameter("idFormaPago", typeof(int));
    
            var totalParameter = total != null ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var rechazoParameter = rechazo.HasValue ?
                new ObjectParameter("rechazo", rechazo) :
                new ObjectParameter("rechazo", typeof(int));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("activo", activo) :
                new ObjectParameter("activo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCompras", idEmpresaParameter, idClienteParameter, idFormaPagoParameter, totalParameter, fechaParameter, rechazoParameter, activoParameter);
        }
    
        public virtual int InsertDetalleCompras(Nullable<int> idCompras, Nullable<int> idEmpresaProducto, Nullable<int> cantidad)
        {
            var idComprasParameter = idCompras.HasValue ?
                new ObjectParameter("idCompras", idCompras) :
                new ObjectParameter("idCompras", typeof(int));
    
            var idEmpresaProductoParameter = idEmpresaProducto.HasValue ?
                new ObjectParameter("idEmpresaProducto", idEmpresaProducto) :
                new ObjectParameter("idEmpresaProducto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertDetalleCompras", idComprasParameter, idEmpresaProductoParameter, cantidadParameter);
        }
    
        public virtual int UpdateCompras(Nullable<int> id, Nullable<int> rechazo, Nullable<int> activo)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var rechazoParameter = rechazo.HasValue ?
                new ObjectParameter("rechazo", rechazo) :
                new ObjectParameter("rechazo", typeof(int));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("activo", activo) :
                new ObjectParameter("activo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCompras", idParameter, rechazoParameter, activoParameter);
        }
    
        public virtual ObjectResult<GetUltimaCompar_Result> GetUltimaCompra()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUltimaCompar_Result>("GetUltimaCompra");
        }
    
        public virtual ObjectResult<GetEmpreProducIdEmpresa_Result> GetEmpreProducIdEmpresa(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmpreProducIdEmpresa_Result>("GetEmpreProducIdEmpresa", idParameter);
        }
    
        public virtual int InsertEmpreProduc(Nullable<int> idProducto, Nullable<int> idEmpresa, string precio, string descripcion, string preciodesc, Nullable<int> stock, Nullable<int> activo)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("idProducto", idProducto) :
                new ObjectParameter("idProducto", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var precioParameter = precio != null ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var preciodescParameter = preciodesc != null ?
                new ObjectParameter("preciodesc", preciodesc) :
                new ObjectParameter("preciodesc", typeof(string));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("stock", stock) :
                new ObjectParameter("stock", typeof(int));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("activo", activo) :
                new ObjectParameter("activo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertEmpreProduc", idProductoParameter, idEmpresaParameter, precioParameter, descripcionParameter, preciodescParameter, stockParameter, activoParameter);
        }
    
        public virtual ObjectResult<ListadoProductoCliente_Result> ListadoProductoCliente(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListadoProductoCliente_Result>("ListadoProductoCliente", idParameter);
        }
    
        public virtual int UpdateEmpreProduc(Nullable<int> idProducto, Nullable<int> idEmpresa, string precio, string descripcion, string preciodesc, Nullable<int> stock, Nullable<int> activo, Nullable<int> id)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("idProducto", idProducto) :
                new ObjectParameter("idProducto", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var precioParameter = precio != null ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var preciodescParameter = preciodesc != null ?
                new ObjectParameter("preciodesc", preciodesc) :
                new ObjectParameter("preciodesc", typeof(string));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("stock", stock) :
                new ObjectParameter("stock", typeof(int));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("activo", activo) :
                new ObjectParameter("activo", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEmpreProduc", idProductoParameter, idEmpresaParameter, precioParameter, descripcionParameter, preciodescParameter, stockParameter, activoParameter, idParameter);
        }
    
        public virtual ObjectResult<ListadoComprasCliente_Result> ListadoComprasCliente(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListadoComprasCliente_Result>("ListadoComprasCliente", idParameter);
        }
    
        public virtual ObjectResult<ListadoComprasEmpresa_Result> ListadoComprasEmpresa(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListadoComprasEmpresa_Result>("ListadoComprasEmpresa", idParameter);
        }
    }
}
